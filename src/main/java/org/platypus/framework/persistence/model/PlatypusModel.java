package org.platypus.framework.persistence.model;

/**
 * Annotation to define a new JPA persistence entity
 * <br/>
 * The value will be the table name following the SQL format
 * <br/>
 * <b>This annotation can only be apply above a java interfaces</b>
 * <br/>
 * This interface can extends all needed interface but
 * can't extends a interface annotated with @PlatypusEntity without the same value
 * <br/>
 * Sample valid use case:
 * <pre>
 * case 1
 * <code>@PlatypusEntity("myTable")
 * public interface MyInterface {}
 * </code>
 * case 2
 * <code>@PlatypusEntity("myTable")
 * public interface MyInterface extends GenericEntity,MyOtherInterface{}
 *
 * This code generated by the platypus framework will be :
 * <code>@javax.persistence.Table("MY_TABLE")</code>
 * <code>@javax.persistence.Entity</code>
 * public class GeneratedMyTableImpl implement GeneratedMyTable {}
 *
 * with GeneratedMyTable in case 1:
 * public interface GeneratedMyTable extends MyInterface {}
 * or
 * with GeneratedMyTable in case 2:
 * public interface GeneratedMyTable extends MyInterface,GenericEntity,MyOtherInterface {}
 * </code>
 * </pre>
 * For JPA annotation see {@linkplain javax.persistence.Entity @Entity} and {@linkplain javax.persistence.Table @Table}
 *
 * @author Alexis PASQUIER
 * @version 0.1
 * @since 0.1
 */
public @interface PlatypusModel {
    /**
     * Define the table name of the generated entity
     * <br/>
     * The value will be converted following the SQL Format if sqlFormat = {@code true}
     * <br/>
     * <code>myTable ==> MY_TABLE</code>
     * <br/>
     * <code>mytable ==> MYTABLE</code>
     * @return the target
     */
    String value();
}
