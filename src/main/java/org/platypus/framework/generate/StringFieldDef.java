package org.platypus.framework.generate;

/**
 * TODO Add JavaDoc
 *
 * @author Alexis PASQUIER
 * @version 0.1
 * @since 0.1
 */
public interface StringFieldDef {
    String DEFAULT = "__DEFAULT__VALUE__";


    static StringFieldBuilder str(String name) {
        return new StringFieldBuilder(name);
    }

    /**
     * = Asciidoclet
     * tag::insertable[]
     * *Optional*
     * <p>
     * Whether the column is included in SQL INSERT
     * statements generated by the persistence provider.
     * <p>
     * end::insertable[]
     */
    default Boolean insertable() {
        return null;
    }

    /**
     * (Optional) Whether the column is included in SQL UPDATE
     * statements generated by the persistence provider.
     */
    default Boolean updatable() {
        return null;
    }

    /**
     * (Optional) The documentation put in the SQL column comment
     */
    default String columnDoc() {
        return null;
    }

    /**
     * (Optional) If the this column will be unique,<br>
     * if an another field use the same hint(case insensitive)<br>
     * the the SQL Unique constraint will be above the two column<br>
     * The Unique constraint name will be UK_<target>_<hint> (ex :  UK_PARTNER_EMAIL)<br>
     * <bold>Warning</bold> if the default value is the same for all same hint value a compile error will be throw<br>
     * To erase the unique constraint set the hint to the default value witch is ""<br>
     */
    default String uniqueHint() {
        return null;
    }

    /**
     * (Optional) Only if you want to erase all the definition of this field defined in other module
     */
    default boolean eraseWithYours() {
        return false;
    }

    default int maxSize() {
        return Integer.MAX_VALUE;
    }

    default int minSize() {
        return Integer.MIN_VALUE;
    }

    /**
     * (Optional) <br> Define if this field can be <code>null</code> when the model is inserted or updated
     */
    default RequiredType required() {
        return null;
    }

    default String match() {
        return null;
    }

    default RemoveSpaceType removeSpace() {
        return null;
    }

    default String defaultValue() {
        return null;
    }

    enum RequiredType {
        NOT_NULL, NOT_BLANK
    }

    enum RemoveSpaceType {
        START, END, START_END
    }
}
